// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(InnoloftContext))]
    partial class InnoloftContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.DbEntities.Event.Events", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("eventid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EventId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdon");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("EventEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("eventenddate");

                    b.Property<DateTime>("EventStartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("eventstartdate");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("eventtitle");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifiedon");

                    b.HasKey("EventId");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("Domain.DbEntities.EventParticipants.EventParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("integer")
                        .HasColumnName("eventid");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdon");

                    b.Property<bool>("gotInvitation")
                        .HasColumnType("boolean")
                        .HasColumnName("gotinvitation");

                    b.Property<int>("gotInviteFrom")
                        .HasColumnType("integer")
                        .HasColumnName("gotinvitefrom");

                    b.Property<bool>("isParticipating")
                        .HasColumnType("boolean")
                        .HasColumnName("isparticipating");

                    b.HasKey("Id");

                    b.ToTable("EventParticipant", (string)null);
                });

            modelBuilder.Entity("Domain.DbEntities.User.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
